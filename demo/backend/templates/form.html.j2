<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{% if mode == 'edit' %}{{ customer }} / {{ env }}{% else %}Create New Pod{% endif %} - Spec Editor</title>
    <script src="https://cdn.tailwindcss.com"></script>
</head>
<body class="bg-gray-50 min-h-screen">
    <div class="container mx-auto px-4 py-8 max-w-4xl">
        <!-- Breadcrumb Navigation (edit mode only) -->
        {% if mode == 'edit' %}
        <nav class="mb-6 text-sm">
            <a href="/" class="text-blue-600 hover:underline">Home</a>
            <span class="text-gray-400 mx-2">/</span>
            <span class="text-gray-700 font-medium">{{ customer }}</span>
            <span class="text-gray-400 mx-2">/</span>
            <span class="text-gray-700 font-medium">{{ env }}</span>
        </nav>
        {% endif %}

        <!-- Header -->
        <header class="mb-8">
            {% if mode == 'edit' %}
                <!-- Edit Mode: Show customer/env as badges -->
                <div class="flex items-center justify-between mb-4">
                    <h1 class="text-3xl font-bold text-gray-900 capitalize">
                        {{ customer }}
                    </h1>
                    {% if env == 'dev' %}
                    <span class="px-4 py-2 bg-green-100 text-green-800 text-lg font-medium rounded-full">
                        {{ env }}
                    </span>
                    {% elif env == 'stg' %}
                    <span class="px-4 py-2 bg-yellow-100 text-yellow-800 text-lg font-medium rounded-full">
                        {{ env }}
                    </span>
                    {% elif env == 'prd' %}
                    <span class="px-4 py-2 bg-red-100 text-red-800 text-lg font-medium rounded-full">
                        {{ env }}
                    </span>
                    {% else %}
                    <span class="px-4 py-2 bg-gray-100 text-gray-800 text-lg font-medium rounded-full">
                        {{ env }}
                    </span>
                    {% endif %}
                </div>
            {% else %}
                <!-- Create Mode: Simple title -->
                <h1 class="text-3xl font-bold text-gray-900 mb-4">
                    Create New Pod
                </h1>
            {% endif %}
        </header>

        <!-- Pod Configuration Form -->
        <main>
            <div class="bg-white rounded-lg shadow-md p-6 mb-6">
                <h2 class="text-xl font-semibold text-gray-800 mb-4">
                    Pod Configuration
                </h2>

                <form method="POST" action="/deploy" class="space-y-6">
                    <!-- Customer and Environment Fields -->
                    {% if mode == 'edit' %}
                        <!-- Edit Mode: Hidden inputs -->
                        <input type="hidden" name="customer" value="{{ customer }}">
                        <input type="hidden" name="environment" value="{{ env }}">
                        <input type="hidden" name="mode" value="edit">
                    {% else %}
                        <!-- Create Mode: Dropdowns -->
                        <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                            <div>
                                <label for="customer" class="block text-sm font-medium text-gray-700 mb-2">
                                    Customer *
                                </label>
                                <select name="customer" id="customer" required
                                        class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                                    <option value="">-- Select Customer --</option>
                                    <option value="advworks">advworks</option>
                                    <option value="northwind">northwind</option>
                                    <option value="contoso">contoso</option>
                                </select>
                            </div>

                            <div>
                                <label for="environment" class="block text-sm font-medium text-gray-700 mb-2">
                                    Environment *
                                </label>
                                <select name="environment" id="environment" required
                                        class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                                    <option value="">-- Select Environment --</option>
                                    <option value="dev">dev (Development)</option>
                                    <option value="stg">stg (Staging)</option>
                                    <option value="prd">prd (Production)</option>
                                </select>
                            </div>
                        </div>
                        <input type="hidden" name="mode" value="new">
                    {% endif %}

                    <!-- Computed Instance Name Preview -->
                    <div class="bg-gray-50 p-4 rounded border border-gray-200">
                        <label class="block text-sm font-medium text-gray-700 mb-2">
                            Full Instance Name Preview
                        </label>
                        <p class="text-lg font-mono text-gray-900">
                            <span id="customer-part">{{ customer if mode == 'edit' else '?' }}</span>-<span id="env-part">{{ env if mode == 'edit' else '?' }}</span>-<span id="name-part">{{ spec.spec.compute.instance_name if mode == 'edit' else '?' }}</span>
                        </p>
                        <p class="text-xs text-gray-500 mt-1">
                            Format: {customer}-{environment}-{instance_name}
                        </p>
                    </div>

                    <!-- Compute Section -->
                    <div class="border-t pt-6">
                        <h3 class="text-lg font-semibold text-gray-800 mb-4">Compute</h3>

                        <div>
                            <label for="instance_name" class="block text-sm font-medium text-gray-700 mb-2">
                                Instance Name *
                            </label>
                            <input type="text"
                                   name="instance_name"
                                   id="instance_name"
                                   value="{{ spec.spec.compute.instance_name if mode == 'edit' else '' }}"
                                   required
                                   pattern="[a-z0-9-]+"
                                   placeholder="e.g., web1, app1"
                                   class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                            <small class="text-gray-600 text-xs">Lowercase letters, numbers, hyphens only</small>
                            <small class="text-gray-500 text-xs block mt-1">Note: Instance type is managed in spec.yml, not via this form</small>
                        </div>
                    </div>

                    <!-- Security Section -->
                    <div class="border-t pt-6">
                        <h3 class="text-lg font-semibold text-gray-800 mb-4">Security</h3>

                        <div class="flex items-center">
                            <input type="checkbox"
                                   name="waf_enabled"
                                   id="waf_enabled"
                                   {% if mode == 'edit' and spec.spec.security.waf.enabled %}checked{% endif %}
                                   class="h-5 w-5 text-blue-600 border-gray-300 rounded focus:ring-2 focus:ring-blue-500">
                            <label for="waf_enabled" class="ml-3 text-sm font-medium text-gray-700">
                                Web Application Firewall (WAF) Enabled
                            </label>
                        </div>
                    </div>

                    <!-- Action Buttons -->
                    <div class="border-t pt-6 flex justify-between">
                        <a href="/"
                           class="px-6 py-2 bg-gray-200 text-gray-700 rounded-lg hover:bg-gray-300 transition">
                            ‚Üê Back to Home
                        </a>

                        <button type="submit"
                                class="px-6 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition font-medium">
                            Deploy Changes
                        </button>
                    </div>
                </form>
            </div>
        </main>

        <footer class="mt-12 pt-8 border-t border-gray-200 text-center text-sm text-gray-500">
            <p>
                Spec Editor -
                <a href="https://github.com/trakrf/action-spec"
                   class="text-blue-600 hover:underline">
                    trakrf/action-spec
                </a>
            </p>
            <p class="mt-2">
                Demo Phase D5A - Form Operations
            </p>
        </footer>
    </div>

    <!-- Live Preview JavaScript -->
    <script>
        // Update computed instance name as user types/selects
        const customerPart = document.getElementById('customer-part');
        const envPart = document.getElementById('env-part');
        const namePart = document.getElementById('name-part');

        {% if mode == 'new' %}
        // Create mode: Listen to dropdowns and input
        const customerSelect = document.getElementById('customer');
        const envSelect = document.getElementById('environment');
        const nameInput = document.getElementById('instance_name');

        customerSelect.addEventListener('change', () => {
            customerPart.textContent = customerSelect.value || '?';
        });

        envSelect.addEventListener('change', () => {
            envPart.textContent = envSelect.value || '?';
        });

        nameInput.addEventListener('input', () => {
            namePart.textContent = nameInput.value || '?';
        });
        {% else %}
        // Edit mode: Only listen to instance_name input
        const nameInput = document.getElementById('instance_name');

        nameInput.addEventListener('input', () => {
            namePart.textContent = nameInput.value || '{{ spec.spec.compute.instance_name }}';
        });
        {% endif %}

        // Show loading state on form submit
        const form = document.querySelector('form');
        const submitBtn = form.querySelector('button[type="submit"]');

        form.addEventListener('submit', () => {
            // Change cursor to loading
            document.body.style.cursor = 'wait';

            // Disable button and show loading text
            submitBtn.disabled = true;
            submitBtn.style.opacity = '0.7';
            submitBtn.style.cursor = 'wait';
            submitBtn.innerHTML = `
                <svg class="animate-spin -ml-1 mr-3 h-5 w-5 text-white inline-block" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                    <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                    <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                </svg>
                Deploying...
            `;
        });
    </script>
</body>
</html>
